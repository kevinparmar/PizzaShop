@model ShoppingCart // Replace with the actual model type you're using

@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container mt-5">
    <h2>Your Shopping Cart</h2>
    @if (Model.CartDetails.Count > 0)
    {
        <table class="table table-bordered">
            <thead>
                <tr class="text-center">
                    <th scope="col">Item</th>
                    <th scope="col">Price</th>
                    <th scope="col">Quantity</th>
                    <th scope="col">Total</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.CartDetails)
                {
                    <tr class="text-center">
                        <td>@item.Pizza.Name</td>
                        <td>@item.Pizza.Price.ToString("C2")</td>
                        <td>@item.Quantity</td>
                        <td>@((item.UnitPrice * item.Quantity).ToString("C2"))</td>
                        <td class="text-center">
                            <a class="btn btn-outline-danger" href="/Cart/RemoveItem?cartItemId=@item.PizzaId">-</a>
                            <span id="quantity-@item.Id">@item.Quantity</span>
                            <a class="btn btn-outline-success" href="/Cart/AddItem?pizzaId=@item.PizzaId&&redirect=1">+</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="text-end">
            <h4>Total: @Model.CartDetails.Sum(item => item.UnitPrice * item.Quantity).ToString("C2")</h4>
            <a asp-action="Checkout" class="btn btn-success">Proceed to Checkout</a>
        </div>
    }
    else
    {
        <p>Your shopping cart is empty.</p>
    }
</div>
